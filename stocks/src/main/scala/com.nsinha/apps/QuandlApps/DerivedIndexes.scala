package com.nsinha.apps.QuandlApps

import com.nsinha.impls.Project.QuandlOHLCDump.DerivedIndex.DerivedNormalizedIndex
import com.nsinha.impls.Project.QuandlOHLCDump.NormalizedOHLC.NormalizeTickers

/**
  * Created by nishchaysinha on 11/15/16.
  */
object DerivedIndexes {
  val INDXCONSUMERDISC= "AAP,AMZN,AN,AZO,BABA,BBBY,BBY,BWA,KMX,CCL,CBS,CHTR,CMG,COH,CMCSA,DHI,DRI,DLPH,DISCA,DISCK,DG,DLTR,EXPE,FL,F,GPS,GRMN,GM,GPC,GT,HBI,HOG,HAR,HAS,HD,IPG,JCI,KSS,LB,LEN,LKQ,LOW,M,MAR,MAT,MCD,KORS,MHK,NWL,NWSA,NWS,NKE,JWN,ORLY,OMC,RL,PCLN,PHM,PVH,ROST,RCL,SNI,SIG,SNA,SWK,SPLS,SBUX,TGT,TGNA,TIF,TWX,TJX,TSCO,TRIP,FOXA,FOX,ULTA,UA,UA.C,URBN,VFC,VIAB,DIS,WHR,WYN,WYNN,YUM"
  val INDXCONSUMERSTAPLES = "MO,ADM,BF-B,CPB,CHD,CLX,KO,CL,CAG,STZ,COST,CVS,DPS,EL,GIS,HRL,SJM,K,KMB,KHC,KR,MKC,MJN,TAP,MDLZ,MNST,PEP,PM,PG,RAI,SYY,HSY,TSN,WMT,WBA,WFM"
  val INDXENERGY = "APC,APA,BHI,COG,CHK,CVX,XEC,CXO,COP,DVN,EOG,EQT,XOM,FTI,HAL,HP,HES,KMI,MRO,MPC,MUR,NOV,NFX,NBL,OXY,OKE,PSX,PXD,RRC,SLB,SWN,SE,TSO,RIG,VLO,WMB"
  val INDXFINANCE = "AFL,AMG,ALL,AXP,AMP,AON,AJG,AIZ,BAC,BK,BBT,BRK-B,BLK,HRB,COF,SCHW,CB,CINF,C,CFG,CME,CMA,DFS,ETFC,EFX,FITB,BEN,GS,HIG,HBAN,ICE,IVZ,JPM,KEY,LM,LUK,LNC,L,MTB,MMC,MET,MCO,MS,NDAQ,NAVI,NTRS,PBCT,PNC,PFG,PGR,PRU,RF,STT,STI,SYF,TROW,TRV,TMK,USB,UNM,WFC,WLTW,XL,ZION" //Airline freight
  val INDXHEALTH = "ABT,ABBV,AET,A,AGN,ALXN,ABC,AMGN,ANTM,BCR,BAX,BDX,BIIB,BSX,BMY,CAH,HSIC,CELG,CNC,CERN,CI,DVA,XRAY,EW,ENDP,ESRX,GILD,HCA,HOLX,HUM,ILMN,ISRG,JNJ,LH,LLY,MNK,MCK,MDT,MRK,MTD,MYL,PDCO,PKI,PRGO,PFE,DGX,REGN,STJ,SYK,COO,TMO,UNH,VAR,VRTX,WAT,ZBH,ZTS"
  val INDXINDUSTRIAL = "MMM,AYI,ALK,ALLE,AAL,AME,APH,ARNC,BA,CHRW,CAT,CTAS,GLW,CSX,CMI,DHR,DE,DAL,DOV,DNB,ETN,EMR,EXPD,FAST,FDX,FLIR,FLS,FLR,FTV,FBHS,GD,GE,GWW,HON,ITW,IR,JEC,JBHT,KSU,LLL,LEG,LMT,MAS,NLSN,NSC,NOC,PCAR,PH,PNR,PBI,PWR,RTN,RSG,RHI,ROK,COL,ROP,R,LUV,SRCL,TXT,TDG,UNP,UAL,UPS,UTX,VRSK,WM,XYL"
  val INDXIT = "ACN,ATVI,ADBE,AKAM,ADS,DATA,GOOGL,GOOG,AAPL,ADSK,ADP,AMAT,AVGO,CSCO,INTC,CTXS,CTSH,CSRA,EBAY,EA,FFIV,FB,FIS,FSLR,FISV,GPN,HRS,HPE,HPQ,IBM,INTU,JNPR,KLAC,LRCX,LLTC,MA,MCHP,MU,MSFT,MSI,NTAP,NFLX,NVDA,ORCL,PAYX,PYPL,QRVO,QCOM,RHT,CRM,STX,SWKS,SYMC,TEL,TDC,TXN,TSS,VRSN,V,WDC,WU,XRX,XLNX,YHOO"
  val INDXSEMI = "AMAT,AMD,AVGO,CSCO,INTC,NVDA,QCOM,STM,TXN,SNPS,CDNS"
  val INDXMATERIALS = "D,ALB,AVY,BLL,CF,DOW,DD,EMN,ECL,FMC,FCX,IP,IFF,LYB,MLM,MON,MOS,NEM,NUE,OI,PPG,PX,SEE,SHW,VMC,WRK"
  val INDXAUTO = "BWA,DLPH,F,GM,TM,TSLA"
  val INDXRE = "AMT,AIV,BXP,CBG,CCI,DLR,EQIX,EQR,ESS,EXR,FRT,GGP,HCP,HST,IRM,KIM,MAC,PLD,PSA,O,SPG,SLG,UDR,VTR,VNO,HCN,WY"
  val INDXBIO = "ALXN,AMGN,BIIB,CELG,GILD,REGN,VRTX,ENDP"
  val INDXUTILITIES = "ES,LNT,AEE,AEP,AWK,CNP,CMS,ED,D,DTE,DUK,EIX,ETR,ES,EXC,FE,NEE,NI,NRG,PCG,PNW,PPL,PEG,SCG,SRE,SO,WEC,XEL"
  val INDXTELCOM = "T,CTL,FTR,LVLT,VZ"
  val INDXSTARTUPS = "MSBI,NCBS,LN,GCP,MFS,NTLA,VLVLY,LSXMA,RETA,GMS,SUPV,NGVT,COTV,AFI,TPB,SCWX,SNDX,PTI,TWLO,BATRA,SENS,BATRK,NTNX,USFD,EDIT,GWRS,WINS,YIN,CRVS,QHC,SITE,AVXS,LSXMK,RRR,LIND,ACIA,ARA"


  val derivedIndexes :Map[String, String] = Map("INDXCONSUMERDISC" -> INDXCONSUMERDISC,
    "INDXCONSUMERSTAPLES" -> INDXCONSUMERSTAPLES,
    "INDXENERGY" ->  INDXENERGY,  "INDXFINANCE" ->INDXFINANCE, "INDXHEALTH" -> INDXHEALTH, "INDXINDUSTRIAL" -> INDXINDUSTRIAL,
    "INDXIT" -> INDXIT, "INDXSEMI" -> INDXSEMI,  "INDXMATERIALS" -> INDXMATERIALS, "INDXAUTO" -> INDXAUTO, "INDXRE" -> INDXRE,
    "INDXBIO" -> INDXBIO, "INDXUTILITIES" -> INDXUTILITIES, "INDXTELCOM" -> INDXTELCOM, "INDXSTARTUPS" -> INDXSTARTUPS)

  def run() = {
    for (year <- Range(2000,2017)) {
      derivedIndexes map {idxKV => DerivedNormalizedIndex.processDirectory(
        s"/Users/nishchaysinha/stocksdatadir/ohlc/yearlies/${year}/normalized", listOfTickersInIndex = commaseparatedIntoList(idxKV._2), index = idxKV._1 ) }
    }
  }

  private def commaseparatedIntoList(s: String): List[String] = {
    s.split(",") toList
  }

  def main(args: Array[String]) {
    run()
  }




}
